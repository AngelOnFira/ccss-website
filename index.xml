<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on Carleton Computer Science Society</title><link>https://ccss.carleton.ca/ccss-website/</link><description>Recent content in Home on Carleton Computer Science Society</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 26 Jan 2020 23:11:13 +0000</lastBuildDate><atom:link href="https://ccss.carleton.ca/ccss-website/index.xml" rel="self" type="application/rss+xml"/><item><title>Speed Friending</title><link>https://ccss.carleton.ca/ccss-website/events/2020-2021/social/2021-04-09-speed-friending/</link><pubDate>Fri, 09 Apr 2021 00:00:00 +0000</pubDate><guid>https://ccss.carleton.ca/ccss-website/events/2020-2021/social/2021-04-09-speed-friending/</guid><description/></item><item><title>Blockchain + Crypto Q&amp;A Session</title><link>https://ccss.carleton.ca/ccss-website/events/2020-2021/academic/2021-04-07-blockchain-crypto-qa-session/</link><pubDate>Wed, 07 Apr 2021 00:00:00 +0000</pubDate><guid>https://ccss.carleton.ca/ccss-website/events/2020-2021/academic/2021-04-07-blockchain-crypto-qa-session/</guid><description>Description We have invited Jeremy Clark, an associate professor at the Concordia Institute for Information Systems Engineering, back for an interactive Q&amp;amp;A session to continue the discussion on crypto and blockchain technology!
Given that there were many audience questions left unanswered during his previous lecture, and many of you expressed interest in having Jeremy back, we are very happy to be hosting this follow-up discussion session.</description></item><item><title>Winter Prof Social</title><link>https://ccss.carleton.ca/ccss-website/events/2020-2021/2021-03-26-prof-social/</link><pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate><guid>https://ccss.carleton.ca/ccss-website/events/2020-2021/2021-03-26-prof-social/</guid><description>Description In the spirit of staying connected with one another in a remote learning environment, the CCSS cordially invites you to a virtual Prof Social, to be hosted on Zoom!
During the event, students and faculty members will have a chance to mingle with one another in a number of breakout rooms. At regular intervals, participants will be prompted to switch rooms and continue the conversation with new faces! This event was inspired by the Prof Nights from previous years, and serves as a COVID-safe substitute.</description></item><item><title>Become a Senior Engineer in 2 years</title><link>https://ccss.carleton.ca/ccss-website/events/2020-2021/academic/2021-03-24-become-a-senior-developer/</link><pubDate>Wed, 24 Mar 2021 00:00:00 +0000</pubDate><guid>https://ccss.carleton.ca/ccss-website/events/2020-2021/academic/2021-03-24-become-a-senior-developer/</guid><description>Description Ryan Latta will be talking about what it takes to become a Senior level engineer! This talk will discuss what qualities make a great Senior Developer, and what you can start learning and practicing today that will help you become a Senior Engineer within 2 years of starting your career!
Ryan Latta has been in the software industry for over a decade. He has worked launching his own start-ups and in Fortune 100 companies doing everything from software development to acting as a CTO.</description></item><item><title>Annoucement</title><link>https://ccss.carleton.ca/ccss-website/news/annoucement/</link><pubDate>Sat, 25 Jan 2020 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/ccss-website/news/annoucement/</guid><description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313 Corresponding pseudo commands:</description></item><item><title>CCSS Election Results for 2021-2022</title><link>https://ccss.carleton.ca/ccss-website/news/overlay/</link><pubDate>Sat, 25 Jan 2020 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/ccss-website/news/overlay/</guid><description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313 Corresponding pseudo commands:</description></item><item><title>Happy Pride Month!</title><link>https://ccss.carleton.ca/ccss-website/news/overlay/</link><pubDate>Sat, 25 Jan 2020 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/ccss-website/news/overlay/</guid><description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313 Corresponding pseudo commands:</description></item><item><title>Happy Pride Month!</title><link>https://ccss.carleton.ca/ccss-website/news/overlay/</link><pubDate>Sat, 25 Jan 2020 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/ccss-website/news/overlay/</guid><description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313 Corresponding pseudo commands:</description></item><item><title>Happy Pride Month!</title><link>https://ccss.carleton.ca/ccss-website/position/overlay/</link><pubDate>Sat, 25 Jan 2020 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/ccss-website/position/overlay/</guid><description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313 Corresponding pseudo commands:</description></item><item><title>Winter 2021 - CCSS X SCS Feedback and Suggestions Survey Report</title><link>https://ccss.carleton.ca/ccss-website/news/overlay/</link><pubDate>Sat, 25 Jan 2020 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/ccss-website/news/overlay/</guid><description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313 Corresponding pseudo commands:</description></item></channel></rss>